# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qtui-neural-net2.ui'
#
# Created: Thu Oct 30 09:32:36 2014
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_neuralNetController(object):
    def setupUi(self, neuralNetController):
        neuralNetController.setObjectName(_fromUtf8("neuralNetController"))
        neuralNetController.resize(620, 574)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(neuralNetController.sizePolicy().hasHeightForWidth())
        neuralNetController.setSizePolicy(sizePolicy)
        self.centralwidget = QtGui.QWidget(neuralNetController)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.frame_main = QtGui.QFrame(self.centralwidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.frame_main.sizePolicy().hasHeightForWidth())
        self.frame_main.setSizePolicy(sizePolicy)
        self.frame_main.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_main.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_main.setObjectName(_fromUtf8("frame_main"))
        self.verticalLayout_4 = QtGui.QVBoxLayout(self.frame_main)
        self.verticalLayout_4.setObjectName(_fromUtf8("verticalLayout_4"))
        self.frame_inputFiles = QtGui.QFrame(self.frame_main)
        self.frame_inputFiles.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_inputFiles.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_inputFiles.setObjectName(_fromUtf8("frame_inputFiles"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.frame_inputFiles)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        self.horizontalFrame_quickSetup = QtGui.QFrame(self.frame_inputFiles)
        self.horizontalFrame_quickSetup.setFrameShape(QtGui.QFrame.StyledPanel)
        self.horizontalFrame_quickSetup.setFrameShadow(QtGui.QFrame.Sunken)
        self.horizontalFrame_quickSetup.setObjectName(_fromUtf8("horizontalFrame_quickSetup"))
        self.horizontalLayout_2 = QtGui.QHBoxLayout(self.horizontalFrame_quickSetup)
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.btn_startNet = QtGui.QPushButton(self.horizontalFrame_quickSetup)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_startNet.sizePolicy().hasHeightForWidth())
        self.btn_startNet.setSizePolicy(sizePolicy)
        self.btn_startNet.setMinimumSize(QtCore.QSize(120, 0))
        self.btn_startNet.setObjectName(_fromUtf8("btn_startNet"))
        self.horizontalLayout_2.addWidget(self.btn_startNet)
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.lbl_quickSetup = QtGui.QLabel(self.horizontalFrame_quickSetup)
        self.lbl_quickSetup.setObjectName(_fromUtf8("lbl_quickSetup"))
        self.horizontalLayout_2.addWidget(self.lbl_quickSetup)
        self.btn_training = QtGui.QPushButton(self.horizontalFrame_quickSetup)
        self.btn_training.setObjectName(_fromUtf8("btn_training"))
        self.horizontalLayout_2.addWidget(self.btn_training)
        self.btn_validate = QtGui.QPushButton(self.horizontalFrame_quickSetup)
        self.btn_validate.setObjectName(_fromUtf8("btn_validate"))
        self.horizontalLayout_2.addWidget(self.btn_validate)
        self.btn_trained = QtGui.QPushButton(self.horizontalFrame_quickSetup)
        self.btn_trained.setObjectName(_fromUtf8("btn_trained"))
        self.horizontalLayout_2.addWidget(self.btn_trained)
        self.verticalLayout_3.addWidget(self.horizontalFrame_quickSetup)
        self.horizontalLayout_topology = QtGui.QHBoxLayout()
        self.horizontalLayout_topology.setObjectName(_fromUtf8("horizontalLayout_topology"))
        self.lbl_topology = QtGui.QLabel(self.frame_inputFiles)
        self.lbl_topology.setObjectName(_fromUtf8("lbl_topology"))
        self.horizontalLayout_topology.addWidget(self.lbl_topology)
        self.txt_topologyFilename = QtGui.QLineEdit(self.frame_inputFiles)
        self.txt_topologyFilename.setStatusTip(_fromUtf8(""))
        self.txt_topologyFilename.setObjectName(_fromUtf8("txt_topologyFilename"))
        self.horizontalLayout_topology.addWidget(self.txt_topologyFilename)
        self.btn_selectTopologyFile = QtGui.QPushButton(self.frame_inputFiles)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_selectTopologyFile.sizePolicy().hasHeightForWidth())
        self.btn_selectTopologyFile.setSizePolicy(sizePolicy)
        self.btn_selectTopologyFile.setMaximumSize(QtCore.QSize(28, 16777215))
        self.btn_selectTopologyFile.setObjectName(_fromUtf8("btn_selectTopologyFile"))
        self.horizontalLayout_topology.addWidget(self.btn_selectTopologyFile)
        self.verticalLayout_3.addLayout(self.horizontalLayout_topology)
        self.horizontalLayout_trainData = QtGui.QHBoxLayout()
        self.horizontalLayout_trainData.setObjectName(_fromUtf8("horizontalLayout_trainData"))
        self.lbl_samplesFile = QtGui.QLabel(self.frame_inputFiles)
        self.lbl_samplesFile.setObjectName(_fromUtf8("lbl_samplesFile"))
        self.horizontalLayout_trainData.addWidget(self.lbl_samplesFile)
        self.txt_trainDataFilename = QtGui.QLineEdit(self.frame_inputFiles)
        self.txt_trainDataFilename.setObjectName(_fromUtf8("txt_trainDataFilename"))
        self.horizontalLayout_trainData.addWidget(self.txt_trainDataFilename)
        self.btn_selectTrainDataFile = QtGui.QPushButton(self.frame_inputFiles)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_selectTrainDataFile.sizePolicy().hasHeightForWidth())
        self.btn_selectTrainDataFile.setSizePolicy(sizePolicy)
        self.btn_selectTrainDataFile.setMaximumSize(QtCore.QSize(28, 16777215))
        self.btn_selectTrainDataFile.setObjectName(_fromUtf8("btn_selectTrainDataFile"))
        self.horizontalLayout_trainData.addWidget(self.btn_selectTrainDataFile)
        self.verticalLayout_3.addLayout(self.horizontalLayout_trainData)
        self.horizontalLayout_weightsFile = QtGui.QHBoxLayout()
        self.horizontalLayout_weightsFile.setObjectName(_fromUtf8("horizontalLayout_weightsFile"))
        self.label_weightsFile = QtGui.QLabel(self.frame_inputFiles)
        self.label_weightsFile.setObjectName(_fromUtf8("label_weightsFile"))
        self.horizontalLayout_weightsFile.addWidget(self.label_weightsFile)
        self.txt_weightsFilename = QtGui.QLineEdit(self.frame_inputFiles)
        self.txt_weightsFilename.setObjectName(_fromUtf8("txt_weightsFilename"))
        self.horizontalLayout_weightsFile.addWidget(self.txt_weightsFilename)
        self.btn_selectWeightsFile = QtGui.QPushButton(self.frame_inputFiles)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_selectWeightsFile.sizePolicy().hasHeightForWidth())
        self.btn_selectWeightsFile.setSizePolicy(sizePolicy)
        self.btn_selectWeightsFile.setMaximumSize(QtCore.QSize(28, 16777215))
        self.btn_selectWeightsFile.setObjectName(_fromUtf8("btn_selectWeightsFile"))
        self.horizontalLayout_weightsFile.addWidget(self.btn_selectWeightsFile)
        self.verticalLayout_3.addLayout(self.horizontalLayout_weightsFile)
        self.verticalLayout_4.addWidget(self.frame_inputFiles)
        self.frame_sampleLoadRepeats = QtGui.QFrame(self.frame_main)
        self.frame_sampleLoadRepeats.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_sampleLoadRepeats.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_sampleLoadRepeats.setObjectName(_fromUtf8("frame_sampleLoadRepeats"))
        self.horizontalLayout = QtGui.QHBoxLayout(self.frame_sampleLoadRepeats)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.verticalLayout_shuffleRepeat = QtGui.QVBoxLayout()
        self.verticalLayout_shuffleRepeat.setObjectName(_fromUtf8("verticalLayout_shuffleRepeat"))
        self.btn_runOnce = QtGui.QRadioButton(self.frame_sampleLoadRepeats)
        self.btn_runOnce.setObjectName(_fromUtf8("btn_runOnce"))
        self.verticalLayout_shuffleRepeat.addWidget(self.btn_runOnce)
        self.btn_repeat = QtGui.QRadioButton(self.frame_sampleLoadRepeats)
        self.btn_repeat.setObjectName(_fromUtf8("btn_repeat"))
        self.verticalLayout_shuffleRepeat.addWidget(self.btn_repeat)
        self.btn_shuffleRepeat = QtGui.QRadioButton(self.frame_sampleLoadRepeats)
        self.btn_shuffleRepeat.setChecked(True)
        self.btn_shuffleRepeat.setObjectName(_fromUtf8("btn_shuffleRepeat"))
        self.verticalLayout_shuffleRepeat.addWidget(self.btn_shuffleRepeat)
        self.horizontalLayout.addLayout(self.verticalLayout_shuffleRepeat)
        self.btn_reloadData = QtGui.QPushButton(self.frame_sampleLoadRepeats)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Maximum, QtGui.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_reloadData.sizePolicy().hasHeightForWidth())
        self.btn_reloadData.setSizePolicy(sizePolicy)
        self.btn_reloadData.setObjectName(_fromUtf8("btn_reloadData"))
        self.horizontalLayout.addWidget(self.btn_reloadData)
        self.verticalLayout_4.addWidget(self.frame_sampleLoadRepeats)
        self.splitter_netParams = QtGui.QSplitter(self.frame_main)
        self.splitter_netParams.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_netParams.setObjectName(_fromUtf8("splitter_netParams"))
        self.splitter_everyNth_reportInterval = QtGui.QSplitter(self.splitter_netParams)
        self.splitter_everyNth_reportInterval.setOrientation(QtCore.Qt.Vertical)
        self.splitter_everyNth_reportInterval.setObjectName(_fromUtf8("splitter_everyNth_reportInterval"))
        self.horizontalLayoutWidget_2 = QtGui.QWidget(self.splitter_everyNth_reportInterval)
        self.horizontalLayoutWidget_2.setObjectName(_fromUtf8("horizontalLayoutWidget_2"))
        self.horizontalLayout_reportInterval = QtGui.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_reportInterval.setMargin(0)
        self.horizontalLayout_reportInterval.setObjectName(_fromUtf8("horizontalLayout_reportInterval"))
        self.lbl_everyNth = QtGui.QLabel(self.horizontalLayoutWidget_2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_everyNth.sizePolicy().hasHeightForWidth())
        self.lbl_everyNth.setSizePolicy(sizePolicy)
        self.lbl_everyNth.setObjectName(_fromUtf8("lbl_everyNth"))
        self.horizontalLayout_reportInterval.addWidget(self.lbl_everyNth)
        self.txt_everyNth = QtGui.QLineEdit(self.horizontalLayoutWidget_2)
        self.txt_everyNth.setObjectName(_fromUtf8("txt_everyNth"))
        self.horizontalLayout_reportInterval.addWidget(self.txt_everyNth)
        self.lbl_samples_2 = QtGui.QLabel(self.horizontalLayoutWidget_2)
        self.lbl_samples_2.setObjectName(_fromUtf8("lbl_samples_2"))
        self.horizontalLayout_reportInterval.addWidget(self.lbl_samples_2)
        self.horizontalLayoutWidget_3 = QtGui.QWidget(self.splitter_everyNth_reportInterval)
        self.horizontalLayoutWidget_3.setObjectName(_fromUtf8("horizontalLayoutWidget_3"))
        self.horizontalLayout_everyNth = QtGui.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_everyNth.setMargin(0)
        self.horizontalLayout_everyNth.setObjectName(_fromUtf8("horizontalLayout_everyNth"))
        self.lbl_errAvg = QtGui.QLabel(self.horizontalLayoutWidget_3)
        self.lbl_errAvg.setObjectName(_fromUtf8("lbl_errAvg"))
        self.horizontalLayout_everyNth.addWidget(self.lbl_errAvg)
        self.txt_errorAverageWindow = QtGui.QLineEdit(self.horizontalLayoutWidget_3)
        self.txt_errorAverageWindow.setObjectName(_fromUtf8("txt_errorAverageWindow"))
        self.horizontalLayout_everyNth.addWidget(self.txt_errorAverageWindow)
        self.lbl_samples = QtGui.QLabel(self.horizontalLayoutWidget_3)
        self.lbl_samples.setObjectName(_fromUtf8("lbl_samples"))
        self.horizontalLayout_everyNth.addWidget(self.lbl_samples)
        self.splitter_etaControl = QtGui.QSplitter(self.splitter_netParams)
        self.splitter_etaControl.setOrientation(QtCore.Qt.Vertical)
        self.splitter_etaControl.setObjectName(_fromUtf8("splitter_etaControl"))
        self.horizontalLayoutWidget_4 = QtGui.QWidget(self.splitter_etaControl)
        self.horizontalLayoutWidget_4.setObjectName(_fromUtf8("horizontalLayoutWidget_4"))
        self.horizontalLayout_eta = QtGui.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.horizontalLayout_eta.setMargin(0)
        self.horizontalLayout_eta.setObjectName(_fromUtf8("horizontalLayout_eta"))
        self.lbl_eta = QtGui.QLabel(self.horizontalLayoutWidget_4)
        self.lbl_eta.setObjectName(_fromUtf8("lbl_eta"))
        self.horizontalLayout_eta.addWidget(self.lbl_eta)
        self.txt_eta = QtGui.QLineEdit(self.horizontalLayoutWidget_4)
        self.txt_eta.setObjectName(_fromUtf8("txt_eta"))
        self.horizontalLayout_eta.addWidget(self.txt_eta)
        self.checkBox_train = QtGui.QCheckBox(self.splitter_etaControl)
        self.checkBox_train.setChecked(True)
        self.checkBox_train.setObjectName(_fromUtf8("checkBox_train"))
        self.checkBox_dynamicEta = QtGui.QCheckBox(self.splitter_etaControl)
        self.checkBox_dynamicEta.setChecked(True)
        self.checkBox_dynamicEta.setObjectName(_fromUtf8("checkBox_dynamicEta"))
        self.splitter_alphaLambda = QtGui.QSplitter(self.splitter_netParams)
        self.splitter_alphaLambda.setOrientation(QtCore.Qt.Vertical)
        self.splitter_alphaLambda.setObjectName(_fromUtf8("splitter_alphaLambda"))
        self.horizontalLayoutWidget_6 = QtGui.QWidget(self.splitter_alphaLambda)
        self.horizontalLayoutWidget_6.setObjectName(_fromUtf8("horizontalLayoutWidget_6"))
        self.horizontalLayout_alpha = QtGui.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.horizontalLayout_alpha.setMargin(0)
        self.horizontalLayout_alpha.setObjectName(_fromUtf8("horizontalLayout_alpha"))
        self.lbl_alpha = QtGui.QLabel(self.horizontalLayoutWidget_6)
        self.lbl_alpha.setObjectName(_fromUtf8("lbl_alpha"))
        self.horizontalLayout_alpha.addWidget(self.lbl_alpha)
        self.txt_alpha = QtGui.QLineEdit(self.horizontalLayoutWidget_6)
        self.txt_alpha.setObjectName(_fromUtf8("txt_alpha"))
        self.horizontalLayout_alpha.addWidget(self.txt_alpha)
        self.horizontalLayoutWidget_5 = QtGui.QWidget(self.splitter_alphaLambda)
        self.horizontalLayoutWidget_5.setObjectName(_fromUtf8("horizontalLayoutWidget_5"))
        self.horizontalLayout_lambda = QtGui.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.horizontalLayout_lambda.setMargin(0)
        self.horizontalLayout_lambda.setObjectName(_fromUtf8("horizontalLayout_lambda"))
        self.lbl_lambda = QtGui.QLabel(self.horizontalLayoutWidget_5)
        self.lbl_lambda.setObjectName(_fromUtf8("lbl_lambda"))
        self.horizontalLayout_lambda.addWidget(self.lbl_lambda)
        self.txt_lambda = QtGui.QLineEdit(self.horizontalLayoutWidget_5)
        self.txt_lambda.setObjectName(_fromUtf8("txt_lambda"))
        self.horizontalLayout_lambda.addWidget(self.txt_lambda)
        self.verticalLayout_4.addWidget(self.splitter_netParams)
        self.frame_doneWeights = QtGui.QFrame(self.frame_main)
        self.frame_doneWeights.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_doneWeights.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_doneWeights.setLineWidth(2)
        self.frame_doneWeights.setObjectName(_fromUtf8("frame_doneWeights"))
        self.horizontalLayout_doneWeights = QtGui.QHBoxLayout(self.frame_doneWeights)
        self.horizontalLayout_doneWeights.setObjectName(_fromUtf8("horizontalLayout_doneWeights"))
        self.lbl_doneThreshold = QtGui.QLabel(self.frame_doneWeights)
        self.lbl_doneThreshold.setObjectName(_fromUtf8("lbl_doneThreshold"))
        self.horizontalLayout_doneWeights.addWidget(self.lbl_doneThreshold)
        self.txt_doneThreshold = QtGui.QLineEdit(self.frame_doneWeights)
        self.txt_doneThreshold.setObjectName(_fromUtf8("txt_doneThreshold"))
        self.horizontalLayout_doneWeights.addWidget(self.txt_doneThreshold)
        self.horizontalLayout_saveLoadWeights = QtGui.QHBoxLayout()
        self.horizontalLayout_saveLoadWeights.setObjectName(_fromUtf8("horizontalLayout_saveLoadWeights"))
        self.btn_saveWeights = QtGui.QPushButton(self.frame_doneWeights)
        self.btn_saveWeights.setObjectName(_fromUtf8("btn_saveWeights"))
        self.horizontalLayout_saveLoadWeights.addWidget(self.btn_saveWeights)
        self.btn_loadWeights = QtGui.QPushButton(self.frame_doneWeights)
        self.btn_loadWeights.setObjectName(_fromUtf8("btn_loadWeights"))
        self.horizontalLayout_saveLoadWeights.addWidget(self.btn_loadWeights)
        self.horizontalLayout_doneWeights.addLayout(self.horizontalLayout_saveLoadWeights)
        self.verticalLayout_4.addWidget(self.frame_doneWeights)
        self.frame_runControls = QtGui.QFrame(self.frame_main)
        self.frame_runControls.setFrameShape(QtGui.QFrame.StyledPanel)
        self.frame_runControls.setFrameShadow(QtGui.QFrame.Raised)
        self.frame_runControls.setObjectName(_fromUtf8("frame_runControls"))
        self.horizontalLayout_runControls = QtGui.QHBoxLayout(self.frame_runControls)
        self.horizontalLayout_runControls.setObjectName(_fromUtf8("horizontalLayout_runControls"))
        self.btn_pause = QtGui.QPushButton(self.frame_runControls)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(234, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(252, 252, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(233, 133, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(234, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(252, 252, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(233, 133, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(234, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(233, 133, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(233, 133, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.btn_pause.setPalette(palette)
        self.btn_pause.setObjectName(_fromUtf8("btn_pause"))
        self.horizontalLayout_runControls.addWidget(self.btn_pause)
        self.btn_resume = QtGui.QPushButton(self.frame_runControls)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(152, 226, 162))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(252, 252, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 197, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(152, 226, 162))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(252, 252, 252))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 197, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(152, 226, 162))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 197, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(144, 197, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.btn_resume.setPalette(palette)
        self.btn_resume.setObjectName(_fromUtf8("btn_resume"))
        self.horizontalLayout_runControls.addWidget(self.btn_resume)
        self.verticalLayout_4.addWidget(self.frame_runControls)
        self.verticalLayout.addWidget(self.frame_main)
        neuralNetController.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(neuralNetController)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 620, 27))
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.menubar.sizePolicy().hasHeightForWidth())
        self.menubar.setSizePolicy(sizePolicy)
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        neuralNetController.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(neuralNetController)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        neuralNetController.setStatusBar(self.statusbar)
        self.actionLoad = QtGui.QAction(neuralNetController)
        self.actionLoad.setObjectName(_fromUtf8("actionLoad"))
        self.actionSave = QtGui.QAction(neuralNetController)
        self.actionSave.setObjectName(_fromUtf8("actionSave"))
        self.actionQuit = QtGui.QAction(neuralNetController)
        self.actionQuit.setObjectName(_fromUtf8("actionQuit"))
        self.actionAbout = QtGui.QAction(neuralNetController)
        self.actionAbout.setObjectName(_fromUtf8("actionAbout"))
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(neuralNetController)
        QtCore.QMetaObject.connectSlotsByName(neuralNetController)

    def retranslateUi(self, neuralNetController):
        neuralNetController.setWindowTitle(_translate("neuralNetController", "neural2d control", None))
        self.btn_startNet.setToolTip(_translate("neuralNetController", "Launch the neural2d executable. The method is OS-specific.", None))
        self.btn_startNet.setText(_translate("neuralNetController", "Start Net", None))
        self.lbl_quickSetup.setText(_translate("neuralNetController", "Quick setup:", None))
        self.btn_training.setToolTip(_translate("neuralNetController", "Enable backprop weight updating. The input data file must contain target values.", None))
        self.btn_training.setText(_translate("neuralNetController", "TRAINING", None))
        self.btn_validate.setToolTip(_translate("neuralNetController", "Don\'t update weights, just report the output values and network accuracy. The input data config file must contain target output values.", None))
        self.btn_validate.setText(_translate("neuralNetController", "VALIDATE", None))
        self.btn_trained.setToolTip(_translate("neuralNetController", "Don\'t update weights, just report the network output values. Any target output values in the input data file are optional.", None))
        self.btn_trained.setText(_translate("neuralNetController", "TRAINED", None))
        self.lbl_topology.setText(_translate("neuralNetController", "Topology config", None))
        self.txt_topologyFilename.setToolTip(_translate("neuralNetController", "This is a text file that contains the neural network layer configurations.", None))
        self.txt_topologyFilename.setText(_translate("neuralNetController", "topology.txt", None))
        self.btn_selectTopologyFile.setToolTip(_translate("neuralNetController", "Choose a topology config file.", None))
        self.btn_selectTopologyFile.setText(_translate("neuralNetController", "...", None))
        self.lbl_samplesFile.setText(_translate("neuralNetController", "Input data config", None))
        self.txt_trainDataFilename.setToolTip(_translate("neuralNetController", "A text file that contains a list of input image filenames, and optionally, the target output values.", None))
        self.txt_trainDataFilename.setText(_translate("neuralNetController", "inputData.txt", None))
        self.btn_selectTrainDataFile.setToolTip(_translate("neuralNetController", "Choose an input data config file.", None))
        self.btn_selectTrainDataFile.setText(_translate("neuralNetController", "...", None))
        self.label_weightsFile.setText(_translate("neuralNetController", "Weights file", None))
        self.txt_weightsFilename.setToolTip(_translate("neuralNetController", "Filename of a file containing all the connection weights. One floating point number per line. If it does not exist, it will be created when weights are saved.", None))
        self.txt_weightsFilename.setText(_translate("neuralNetController", "weights.txt", None))
        self.btn_selectWeightsFile.setToolTip(_translate("neuralNetController", "Choose a weights filename. If it doesn\'t exist, it will be created when you save weights.", None))
        self.btn_selectWeightsFile.setText(_translate("neuralNetController", "...", None))
        self.btn_runOnce.setToolTip(_translate("neuralNetController", "Select if the input samples will be run once or repeatedly.", None))
        self.btn_runOnce.setText(_translate("neuralNetController", "Run input samples once then pause", None))
        self.btn_repeat.setToolTip(_translate("neuralNetController", "Select if the input samples will be run once or repeatedly.", None))
        self.btn_repeat.setText(_translate("neuralNetController", "Run input samples; repeat", None))
        self.btn_shuffleRepeat.setToolTip(_translate("neuralNetController", "Select if the input samples will be run once or repeatedly.", None))
        self.btn_shuffleRepeat.setText(_translate("neuralNetController", "Run input samples; shuffle; repeat", None))
        self.btn_reloadData.setToolTip(_translate("neuralNetController", "This will delete the cache of input samples and replace them with new samples specified in the input data config file above.", None))
        self.btn_reloadData.setText(_translate("neuralNetController", "Reload (replace) input samples", None))
        self.lbl_everyNth.setText(_translate("neuralNetController", "Report interval", None))
        self.txt_everyNth.setToolTip(_translate("neuralNetController", "Useful in TRAINING mode to reduce screen clutter. Or set to 1 to see a report of every input sample result.", None))
        self.txt_everyNth.setText(_translate("neuralNetController", "100", None))
        self.lbl_samples_2.setText(_translate("neuralNetController", "samples  ", None))
        self.lbl_errAvg.setText(_translate("neuralNetController", "Error average over", None))
        self.txt_errorAverageWindow.setToolTip(_translate("neuralNetController", "For purposes of dynamic eta updating and stopping criterion, the overall network error is averaged over this many input data samples.", None))
        self.txt_errorAverageWindow.setText(_translate("neuralNetController", "20", None))
        self.lbl_samples.setText(_translate("neuralNetController", "samples  ", None))
        self.lbl_eta.setText(_translate("neuralNetController", "eta", None))
        self.txt_eta.setToolTip(_translate("neuralNetController", "Training rate. Hint: start at 0.1 and reduce by a factor of 10 as needed.", None))
        self.txt_eta.setText(_translate("neuralNetController", "0.001", None))
        self.checkBox_train.setToolTip(_translate("neuralNetController", "Enables backprop weight updating.", None))
        self.checkBox_train.setText(_translate("neuralNetController", "Train", None))
        self.checkBox_dynamicEta.setToolTip(_translate("neuralNetController", "When enabled, the eta learning rate parameter will automatically be adjusted for best network learning. Sometimes it works well, sometimes not.", None))
        self.checkBox_dynamicEta.setText(_translate("neuralNetController", "Dynamic eta", None))
        self.lbl_alpha.setText(_translate("neuralNetController", "alpha", None))
        self.txt_alpha.setToolTip(_translate("neuralNetController", "Momentum factor. Hint: Start at 0.5 and reduce as needed.", None))
        self.txt_alpha.setText(_translate("neuralNetController", "0.0", None))
        self.lbl_lambda.setText(_translate("neuralNetController", "lambda", None))
        self.txt_lambda.setToolTip(_translate("neuralNetController", "The regularization parameter. Hint: start at 1, and increase by a factor of 10 as needed. Or set to 0 to disable regularization.", None))
        self.txt_lambda.setText(_translate("neuralNetController", "0.0", None))
        self.lbl_doneThreshold.setText(_translate("neuralNetController", "Pause when average error <=", None))
        self.txt_doneThreshold.setToolTip(_translate("neuralNetController", "The neural net processing will pause when the recent average network error falls below this threshold.", None))
        self.txt_doneThreshold.setText(_translate("neuralNetController", "0.01", None))
        self.btn_saveWeights.setToolTip(_translate("neuralNetController", "Save all the network connection weights to the weights file specified above.", None))
        self.btn_saveWeights.setText(_translate("neuralNetController", "Save weights", None))
        self.btn_loadWeights.setToolTip(_translate("neuralNetController", "Restore all the network connection weights from the weights file specified above.", None))
        self.btn_loadWeights.setText(_translate("neuralNetController", "Load weights", None))
        self.btn_pause.setToolTip(_translate("neuralNetController", "Pause network operation.", None))
        self.btn_pause.setText(_translate("neuralNetController", "Pause ||", None))
        self.btn_resume.setToolTip(_translate("neuralNetController", "Start or resume a paused network.", None))
        self.btn_resume.setText(_translate("neuralNetController", " Resume >>", None))
        self.menuFile.setTitle(_translate("neuralNetController", "File", None))
        self.menuHelp.setTitle(_translate("neuralNetController", "Help", None))
        self.actionLoad.setText(_translate("neuralNetController", "Load settings", None))
        self.actionSave.setText(_translate("neuralNetController", "Save settings", None))
        self.actionQuit.setText(_translate("neuralNetController", "Quit", None))
        self.actionAbout.setText(_translate("neuralNetController", "About", None))

